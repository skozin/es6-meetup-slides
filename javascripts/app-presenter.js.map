{"version":3,"sources":["app/scripts/feynman.coffee","app/scripts/initialize.coffee","app/scripts/messages.coffee","app/scripts/participants.coffee","app/scripts/poll-chart.coffee","app/scripts/presentation.coffee","app/scripts/server-api-mock.coffee","app/scripts/server-api.coffee","app/scripts/utils/bacon-helpers.coffee","app/scripts/utils/cookie-utils.coffee","app/scripts/utils/plurals.js"],"names":[],"mappings":"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","file":"public/javascripts/app-presenter.js","sourcesContent":["module.exports = class Feynman\n\n  SPEED_INDICATOR_CLASS = '.speed-indicator'\n\n  constructor: (@api) ->\n    @api.$audienceMood.onValue _.bind(@updateSpeedIndicator, @)\n\n  updateSpeedIndicator: (value) ->\n    value = Math.sign(value) if Math.abs(value) > 1\n\n    fastBar = $(\"#{SPEED_INDICATOR_CLASS} .fast-bar\")\n    slowBar = $(\"#{SPEED_INDICATOR_CLASS} .slow-bar\")\n\n    fastBar.css(width: '0%')\n    slowBar.css(width: '0%')\n\n    if value > 0\n      fastBar.css(width: \"#{value * 50}%\")\n\n    if value < 0\n      slowBar.css(width: \"#{value * -50}%\")\n\n    middle =  $(\"#{SPEED_INDICATOR_CLASS} .middle\")\n    if value == 0\n      middle.addClass('show')\n    else\n      middle.removeClass('show')","require './utils/bacon-helpers'\n\n# if false or ('' + window.location).indexOf('localhost') == -1\n#   API = require './server-api'\n# else\nconsole.log 'using mock api'\nAPI = require './server-api-mock'\n\nPresentation = require './presentation'\n\n\napi = new API '/api'\n\n\napi.$initialState.onValue (initialState) -> $ ->\n  presentation = new Presentation api\n  api.startPresentation()\n","module.exports = class Message\n\n  MESSAGES_CONTAINER_CLASS = '.messages-container'\n  TEMPLATE_CONTAINER_ID = '#message'\n  MESSAGE_HEADER = 'Новый вопрос'\n\n  MAX_MESSAGES = 6\n  MESSAGE_DURATION = 20000\n\n  constructor: (@api) ->\n    templateString = $(TEMPLATE_CONTAINER_ID).html()\n    @templateFunc = _.template(templateString)\n    @api.$audienceMessages.onValue (data) =>\n      @showMessage(data)\n\n    checkMessages = () =>\n      msgForRemove = []\n      currentTime = moment Date.now()\n      for message in @messages\n        diff = moment.duration(currentTime.diff(message.timeAdd))\n        diffInMs = diff._milliseconds\n        \n        if (diffInMs > MESSAGE_DURATION)\n          msgForRemove.push message\n\n      @removeMessages(msgForRemove)\n      \n      for i in _.range(msgForRemove.length)\n        if @messagesBuffer.length > 0\n          itemForShow = @messagesBuffer.pop()\n          defferedShowMsg = (iter) =>\n            _.delay((=> @showMessage(itemForShow)), Number(iter) * 1500)\n          defferedShowMsg(i)\n\n    setInterval checkMessages, 500\n    \n  removeMessages: (messagesForRemove) =>\n    for message in messagesForRemove\n      message.$msg.addClass('message-out')\n\n      performDeleteMsg = (mess) ->\n        removeFromDom = ->\n          h = mess.$msg.height()\n          mess.$msg.height(h)\n          mess.$msg.removeClass('message')\n          mess.$msg.empty()\n          slideToggleMsg = () ->\n            mess.$msg.slideToggle( \"slow\", ->\n              mess.$msg.remove()\n            )\n          setTimeout slideToggleMsg, 13\n          \n        _.delay(removeFromDom, 700)\n\n      performDeleteMsg(message)\n\n    @messages = _.difference @messages, messagesForRemove\n\n  messages: []\n  messagesBuffer: []\n\n  showMessage: (data) ->\n    if(@messages.length >= MAX_MESSAGES)\n      @messagesBuffer.push(data)\n    else\n      message = data.message\n      type = data.type\n      header = if type == 'twitter' then '@' + data.userId else MESSAGE_HEADER\n\n      timeAdd = moment(Date.now())\n      $msg = $(@templateFunc({message : message, header: header, type: type}))\n      @messages.unshift( {$msg: $msg, timeAdd: timeAdd} )\n      $(MESSAGES_CONTAINER_CLASS).append($msg)\n      setTimeout (-> $msg.addClass('message-in')), 13\n","TEMPLATE_SELECTOR = '#participants-template'\nANIMATION_DURATION = 200\n\nmodule.exports = class Participants\n  constructor: (@api, @rootSelector, initialState={}) ->\n    @templateFunc = _.template($(TEMPLATE_SELECTOR).html())\n    $(@rootSelector).html( @templateFunc() )\n\n    # Слушаем изменение людей\n    @api.$listenerCount.onValue _.bind(@drawHumans, @)\n\n    if initialState.totalClients?\n      @drawHumans(initialState.totalClients)\n\n  drawHumans: (amount) ->\n    root = $(@rootSelector)\n    currentCount = root.find('.human').length\n\n    if currentCount is amount\n      return\n\n    if currentCount > amount\n      for i in [amount..currentCount - 1]\n        root.find('.human').last().remove()\n\n    if currentCount < amount\n      for i in [currentCount..amount - 1]\n        root.find('.people').append( '<div class=\"human icon-person\"></div>' )\n\n    countNext    = root.find('.count-next')\n    countCurrent = root.find('.count')\n    container    = root.find('.meter')\n\n    countNext.text(amount)\n    container.addClass('changed')\n\n    setTimeout ->\n      container.removeClass('changed')\n      countCurrent.text(countNext.text())\n    , ANIMATION_DURATION\n\n\n\n","CHART_DEFAULT_WIDTH   = 800.0\nCHART_DEFAULT_HEIGHT  = 580.0\n\n# Мы за безопасный секс\nsafeFraction = (a, b) ->\n  return 0.0 if b is 0\n  a / b\n\nmodule.exports = class PollChart\n  ###\n  # Параметры\n  ###\n  labelsColor: '#000000'\n  labelsFont:  'ProximaNova'\n  labelsSize:  '28px'\n\n  # Отступы между столбиками и подписями\n  labelsHeight:  80\n  labelsPadding: 10\n\n  # Отступы между столиками\n  barOuterPad:  0.1\n  barPad:       0.08\n  barAnimationDuration: 200\n  barMinValue:  0.01\n\n  sexyRatio: 0.7\n\n  ###\n  # Конструктор\n  ###\n  constructor: (@element, @width=CHART_DEFAULT_WIDTH, @height=CHART_DEFAULT_HEIGHT) ->\n    @svg = d3.select(@element).append('svg')\n      .attr('width',  @width)\n      .attr('height', @height)\n\n    @barsHeight = @height - @labelsHeight\n\n    # Группа с барами\n    @svg.append('g')\n      .attr('class', 'bars')\n      .attr('transform', =>\n        \"scale(1.0, -1.0) translate(0 -#{@barsHeight})\")\n\n    # Группа с подписями\n    @svg.append('g')\n      .attr('class', 'labels')\n      .attr('transform', \"translate(0 #{@barsHeight + @labelsPadding})\")\n\n  ###\n  # Обновляет данные для отрисовки\n  # TODO: не работает при изменении количества элементов в опросе!\n  ###\n  updateData: (pollData) ->\n    dataLength = pollData.length\n\n    max = d3.max pollData, (d) -> d.weight\n\n    scaleX = d3.scale.ordinal()\n      .domain([0...dataLength])\n      .rangeRoundBands([0, @width], @barPad, @barOuterPad)\n\n    @svg.select('g.bars')\n      .selectAll('rect')\n      .data(pollData)\n      .enter().append('rect')\n      .attr('x', (d, i) -> scaleX(i) )\n      .attr('width', scaleX.rangeBand())\n\n    @svg.select('g.bars')\n      .selectAll('rect')\n      .attr('fill', (d) -> d.color)\n      .transition()\n        .ease('linear')\n        .duration(@barAnimationDuration)\n        .attr('height', (d) =>\n          x = @sexyRatio * safeFraction(d.weight, max)\n          bmin = @barMinValue * @height\n          bmin + (@height - bmin) * x)\n        .attr('y', (d) => 0)\n\n    @svg.select('g.labels')\n      .selectAll('text')\n      .data(pollData)\n      .enter().append('text')\n      .attr('y', 0)\n      .attr('x', (d, i) ->\n        scaleX(i) + 0.5 * scaleX.rangeBand(i))\n      .attr('alignment-baseline', 'text-before-edge')\n      .attr('text-anchor', 'middle')\n      .attr('font-family', @labelsFont)\n      .attr('font-size',   @labelsSize)\n      .attr('fill', @labelsColor)\n      .text (d) -> d.label\n\n  destroy: ->\n    @svg.remove()\n\n    # ай-ай-ай!\n    @isDestroyed = true\n\n\n","PollChart = require './poll-chart'\nplurals   = require './utils/plurals'\n\n###\n# Делает текст вида \"уже 5 человек приняли решение\"\n###\npollTotalText = (total) ->\n  peopleInflection =\n    'one':   'человек принял'\n    'few':   'человекa приняли'\n    'many':  'человек приняли'\n    'other': 'человек приняли'\n\n  peopleText = peopleInflection[ plurals.ru(total) ]\n  \"уже #{total} #{peopleText} решение\"\n\nmodule.exports = class Presentation\n  constructor: (@api) ->\n    Reveal.initialize({\n        controls: false,\n        progress: false,\n        history: false,\n        center: true,\n        transition: 'none',\n        backgroundTransition: 'none',\n        dependencies: [],\n        width: 1440,\n        height: 900,\n        margin: 0,\n        loop: true,\n        slideNumber: false,\n        maxScale: 3.0\n      });\n    Reveal.addEventListener 'slidechanged', (event) =>\n      slide = event.currentSlide\n      slideName = $(slide).data('slide-name')\n      @onSlideChanged(slideName)   \n\n  finishPresentation: ->\n    @api.finishPresentation()\n\n  startPoll: (pollName, pollCfg) ->\n    console.log 'startPoll:', pollName\n\n    @api.startPoll pollName, pollCfg\n\n    chart = @chart = new PollChart('.poll-container', 1200)\n\n    @pollActive = true\n\n    @api.$pollState.onValue (pollData) =>\n      console.log('poll data:', pollData);\n\n      return if (chart.isDestroyed or !pollData?)\n\n      total = d3.sum(pollData, (d) -> d.count)\n      $('.poll-total').text(pollTotalText(total))\n\n      @pollData = pollData\n      @chart.updateData(pollData)\n\n  stopPoll: ->\n    console.log 'stopPoll, @pollActive:', @pollActive\n\n    return unless @pollActive\n    @pollActive = false\n\n    # останавливаем голосование\n    @api.stopPoll()\n\n    # выключаем график\n    return unless @chart?\n    @chart.destroy() unless @chart.isDestroyed\n\n  showPollResults: ->\n    return unless @pollData?\n    winner = _.max @pollData, (d) -> d.count\n    $('section.poll-results').attr('data-background', winner.color)\n    $('.winner-name').text(winner.label)\n    Reveal.sync()\n\n  onSlideChanged: (slideName) =>\n    # console.log slideName, @counterValues[slideName]\n    console.log 'slide changed:', slideName\n\n    # if @counterValues[slideName]\n    #   @od.update(@counterValues[slideName])\n\n    switch slideName\n      when 'gen-poll'\n        @startPoll 'gen-poll',\n          title: 'Знакомы ли вы с генераторами в JS?'\n          options: [\n            label: 'Да, уже использую'\n            color: '#83CD29'\n          ,\n            label: 'Слышал, но не пробовал'\n            color: '#e74c3c'\n          ,\n            label: 'Не знаком'\n            color: '#3498db'\n          ,\n            label: 'Я пришел покушать'\n            color: '#9b59b6'\n          ]\n      when 'gen-poll-results'\n        @stopPoll()\n        @showPollResults()\n\n    # switch slideName\n    #   when 'timemachine'\n    #     @$yearCounter.show()\n    #    when 'jseverywhere'\n    #     @$yearCounter.show()\n    #   when 'jsgithub'\n    #     @$yearCounter.hide()\n\n    #   when 'bored-audience-1'\n    #     true\n    #   when 'interactivity'\n    #     true\n    #   when 'how-to-use'\n    #     do @stopPoll\n    #   when 'naming-poll'\n    #     do @startPoll\n    #   when 'poll-results'\n    #     @$yearCounter.hide()\n    #     do @stopPoll\n    #     do @showPollResults\n    #   when 'contacts'\n    #     do @finishPresentation\n\n","\nmodule.exports = class API\n\n  @PresentationState:\n    NOT_STARTED: 'not_started'\n    ACTIVE: 'active'\n    ENDED: 'ended'\n\n  PresentationState: API.PresentationState\n\n\n  constructor: (apiEndpoint) ->\n    console.debug \"new API #{ apiEndpoint }\"\n    @_ = new APIImpl apiEndpoint\n    @$initialState = @_.$initialState.toProp()\n    @$listenerCount = @_.$listenerCount.toProp()\n    @$audienceMood = @_.$audienceMood.toProp()\n    @$audienceMessages = @_.$audienceMessages\n    @$pollState = @_.$pollState.toProp()\n\n\n  startPresentation: ->\n    console.debug 'api.startPresentation'\n    @_.startPresentation()\n    undefined\n\n\n  setSlideId: (id) ->\n    console.debug \"api.setSlideId '#{ id }'\"\n    @_.setSlideId id\n    id\n\n\n  startPoll: (id, poll) ->\n    console.debug \"api.startPoll '#{ id }', #{ JSON.stringify poll, null, '  ' }\"\n    @_.startPoll id, poll\n    id\n\n\n  stopPoll: ->\n    console.debug 'api.stopPoll'\n    @_.stopPoll()\n    undefined\n\n\n  finishPresentation: ->\n    console.debug 'api.finishPresentation'\n    @_.finishPresentation()\n    undefined\n\n\n####################################################################################################\n\nclass APIImpl\n\n  constructor: (@apiEndpoint) ->\n\n    @initialState = if Math.random() < 0.5\n      state: API.PresentationState.NOT_STARTED\n      listenerCount: 1\n    else\n      state: API.PresentationState.ACTIVE\n      listenerCount: 25\n      slide: '2'\n      audienceMood: 2 * Math.random() - 1\n\n    @state = @initialState.state\n    @$initialState = Bacon.later 100, @initialState\n\n    @$initialState.onValue (initialState) =>\n      if initialState.state isnt API.PresentationState.NOT_STARTED\n        @initEvents()\n\n    @$listenerCount = new Bacon.Bus\n    @$audienceMood = new Bacon.Bus\n    @$pollState = new Bacon.Bus\n    @$audienceMessages = new Bacon.Bus\n\n    @$listenerCount.plug @$initialState.map('.listenerCount').skipNulls()\n    @$audienceMood.plug @$initialState.map('.audienceMood').skipNulls()\n    @$pollState.plug @$initialState.map('.pollState').skipNulls()\n\n    @slide = undefined\n\n\n  startPresentation: ->\n    if @state isnt API.PresentationState.NOT_STARTED\n      return console.warn 'presentation has been already started'\n    @state = API.PresentationState.ACTIVE\n    @initEvents()\n    undefined\n\n\n  initEvents: ->\n    @$listenerCountSrc = randomStream 500, 3000, @initialState.listenerCount, randomizeListenerCount\n    @$audienceMoodSrc = randomStream 100, 200, @initialState.audienceMood, randomizeMood\n    @$audienceMessagesSrc = randomStream 1000, 20000, null, randomMessage\n    noPoll = => not @pollId?\n    @$listenerCount.plug @$listenerCountSrc\n    @$audienceMood.plug @$audienceMoodSrc.filter noPoll\n    @$audienceMessages.plug @$audienceMessagesSrc\n\n\n  setSlideId: (id) ->\n    @slide = id\n\n\n  startPoll: (id, poll) ->\n    if @pollId? then @stopPoll()\n    @pollId = id\n    @poll = poll\n    pollState = pollStateFromPoll poll\n    @$pollStateSrc = randomStream 500, 1000, pollState, randomizePollState\n    @$pollState.plug Bacon.later(0, pollState).concat @$pollStateSrc\n    undefined\n\n\n  stopPoll: ->\n    unless @pollId?\n      return console.warn 'no active poll to stop'\n    @pollId = @poll = undefined\n    @$pollStateSrc.end()\n    @$pollState.push undefined\n    undefined\n\n\n  finishPresentation: ->\n    unless @state is API.PresentationState.ACTIVE\n      return console.warn 'presentation is not started'\n    if @pollId? then @stopPoll()\n    @$listenerCountSrc.end()\n    @$audienceMoodSrc.end()\n    @$audienceMessagesSrc.end()\n    @state = API.PresentationState.ENDED\n\n\n  randomizeListenerCount = (prevCount) ->\n    minD = if prevCount < 30 then 0 else -10\n    maxD = 15\n    Math.min 142, prevCount + Math.floor minD + (maxD - minD) * Math.random()\n\n\n  randomizeMood = (prevMood) ->\n    if Math.random() > 0.97\n      (if Math.random() > 0.5 then 1 else -1) * (0.2 + 0.8 * Math.random())\n    else if Math.abs(prevMood) > 0.01\n      prevMood / 1.1\n    else 0\n\n\n  pollStateFromPoll = (poll) ->\n    _.map poll.options, (opt) ->\n      { label: opt.label, color: opt.color, count: 0, weight: 0 }\n\n\n  randomizePollState = (prevPollState) ->\n    newTotal = 0\n    newPollState = _.map prevPollState, (opt) ->\n      count = opt.count\n      rand = Math.random()\n      if rand > 0.95\n        count = Math.max 0, count - 1\n      else if rand > 0.5\n        count += 1 + Math.floor 3 * Math.random()\n      newTotal += count\n      { count, label: opt.label, color: opt.color }\n    if newTotal == 0\n      idx = Math.floor newPollState.length * Math.random()\n      newPollState[ idx ].count += (newTotal = 1)\n    _.each newPollState, (opt) -> opt.weight = opt.count / newTotal\n\n\n  randomMessage = do ->\n    messages = [\n      { type: 'twitter', userId: 'epshenichniy', message: 'бобры пожрут планету' }\n      { type: 'inapp', userId: '1', message: 'кто здесь?' }\n      { type: 'inapp', userId: '2', message: 'уруру уруру' }\n      { type: 'inapp', userId: '3', message: 'Cookies are a contract between a browser and an\n                                 http server, and are identified by a domain name. If a browser\n                                 has a cookie set for particular domain, it will pass it as a part\n                                 of all http requests to the host.' }\n      { type: 'twitter', userId: 'ururu', message: 'greetings from Urugvai!' }\n    ]\n    -> messages[ Math.floor messages.length * Math.random() ]\n\n  \n  randomStream = (minIntv, maxIntv, initialValue, valueRandomizer) ->\n    $bus = new Bacon.Bus\n    lastValue = initialValue\n    timeoutId = undefined\n    schedule = ->\n      timeout = Math.floor minIntv + (maxIntv - minIntv) * Math.random()\n      timeoutId = setTimeout next, timeout\n    next = ->\n      $bus.push lastValue = valueRandomizer lastValue\n      schedule()\n    $result = $bus.skipDuplicates()\n    $result.end = ->\n      if timeoutId? then clearTimeout timeoutId\n      $bus.end()\n    schedule()\n    $result\n","\nmodule.exports = class ServerAPI\n\n  @PresentationState:\n    NOT_STARTED: 'not_started'\n    ACTIVE: 'active'\n    ENDED: 'ended'\n\n  PresentationState: ServerAPI.PresentationState\n\n\n  constructor: (apiEndpoint) ->\n    console.debug \"new API endpoint #{ apiEndpoint }\"\n    @_ = new APIImpl apiEndpoint\n    @$initialState = @_.$initialState.toProp()\n    @$listenerCount = @_.$listenerCount.toProp()\n    @$audienceMood = @_.$audienceMood.toProp()\n    @$audienceMessages = @_.$audienceMessages\n    @$pollState = @_.$pollState.toProp()\n\n\n  startPresentation: ->\n    console.debug 'api.startPresentation'\n    @_.startPresentation()\n    undefined\n\n\n  setSlideId: (id) ->\n    console.debug \"api.setSlideId '#{ id }'\"\n    @_.setSlideId id\n    id\n\n\n  startPoll: (id, poll) ->\n    console.debug \"api.startPoll '#{ id }', #{ JSON.stringify poll, null, '  ' }\"\n    @_.startPoll id, poll\n    id\n\n\n  stopPoll: ->\n    console.debug 'api.stopPoll'\n    @_.stopPoll()\n    undefined\n\n\n  finishPresentation: ->\n    console.debug 'api.finishPresentation'\n    @_.finishPresentation()\n    undefined\n\n\n####################################################################################################\n\nutils = require './utils/cookie-utils'\n\n\nclass APIImpl\n\n  constructor: (@apiEndpoint) ->\n    @clientData = utils.obtainClientData()\n    @sockjs = new SockJS apiEndpoint\n    @active = no\n\n    console.log \"clientData: #{ JSON.stringify @clientData, null, '  ' }\"\n\n    @sockjs.onopen = (evt) => @on_open evt\n    @sockjs.onmessage = (evt) => @on_message evt\n    @sockjs.onclose = (evt) => @on_close evt\n\n    @$listenerCount = new Bacon.Bus\n    @$audienceMood = new Bacon.Bus\n    @$pollState = new Bacon.Bus\n    @$audienceMessages = new Bacon.Bus\n    @$initialState = new Bacon.Bus\n\n\n  send: (type, data = '') ->\n    unless @active\n      return console.warn \"API.send(#{ type }): connection is not established\"\n    try\n      @sockjs.send JSON.stringify { type, data }\n    catch e\n      console.error \"cannot stringify message <#{ type }>: #{ e }\"\n    undefined\n\n\n  on_open: ->\n    console.log 'API [*] open, proto:', @sockjs.protocol\n    @active = yes\n\n    { clientId, presentationId } = @clientData\n    @send 'init', { clientId, presentationId, isPresenter: yes }\n\n    # @send 'init', { clientId: '1e5077ae-6ad1-4e19-bd06-713e8d0b7efb', presentationId:'9eec054e-6e1f-410c-b1e3-2003a7acfca3', isPresenter: yes }\n\n\n  on_message: (evt) ->\n    console.log 'API [.] message:', evt.data\n    try\n      { type, data } = JSON.parse evt.data\n    catch e\n      console.error \"API: failed to parse incoming message '#{ evt.data }'\"\n      return\n    this[ 'on_' + type ]? data\n\n\n  on_close: (evt) ->\n    @active = no\n    reason = evt && evt.reason\n    console.log 'API [*] close, reason:', reason\n    # @callback 'onError', reason\n\n\n  on_initial_state: (initialState) ->\n    @$initialState.push initialState\n\n  on_presentation_state: (state) ->\n    #unused\n\n  on_poll: (poll) ->\n    #unused\n\n\n  on_total: (moodNumber) ->\n    @$listenerCount.push moodNumber\n\n  on_mood: (moodNumber) ->\n    @$audienceMood.push moodNumber\n\n  on_question: (message) ->\n    @$audienceMessages.push message\n\n  on_poll_results: (poll_results) ->\n    @$pollState.push poll_results\n\n  startPresentation: ->\n    @send 'start'\n    # @initEvents()\n\n  finishPresentation: ->\n    @send 'finish'\n\n  startPoll: (id, poll) ->\n    poll.id = id + Date.now().toString()\n    @send 'poll_start', poll\n\n  stopPoll: ->\n    @send 'poll_finish'\n\n  setSlideId: (id) ->\n    #unused\n","\nunless console?\n  nop = ->\n  window.console = log: nop, warn: nop, error: nop, debug: nop\n\n\nBacon.Observable::skipNulls = do ->\n  nonNull = (v) -> v?\n  -> @filter nonNull\n\n\nBacon.Observable::toProp = (initialValue) ->\n  $prop = @toProperty.apply this, arguments\n  value = undefined\n  $prop.get = -> value\n  $prop.onValue (v) -> value = v\n  $prop\n","\nexports.obtainClientData = ->\n  try\n    cookiesByName = listCookiesByName()\n    unless ( clientDataCookie = cookiesByName.cd )? then return {}\n    JSON.parse b64_to_utf8 clientDataCookie\n  catch e\n    console?.warn? 'error parsing clientData cookie: ' + e\n    {}\n\n\nexports.listCookiesByName = listCookiesByName = ->\n  cookies = {}\n  for cookie in document.cookie.split '; '\n    idx = cookie.indexOf '='\n    if idx >= 0\n      cookies[ cookie.substr(0, idx) ] = cookie.substr(idx + 1)\n  cookies\n\n\nexports.b64_to_utf8 = b64_to_utf8 = (str) ->\n  unescape decodeURIComponent atob str\n","function isAmong(value, array) {\n  for ( var i = 0; i < array.length; ++i ) {\n    if (array[i] === value) { return true; }\n  }\n  return false;\n}\n\nmodule.exports.ru = function(n) {\n  var mod10  = n % 10;\n  var mod100 = n % 100;\n\n  if ( mod10 === 1 && n % 100 !== 11 ) { return 'one'; }\n\n  if ( isAmong(mod10, [ 2, 3, 4 ]) &&\n    !isAmong(mod100, [ 12, 13, 14 ]) ) { return 'few'; }\n\n  if ( isAmong(mod10, [ 0, 5, 6, 7, 8, 9 ]) ||\n    isAmong(mod100, [ 11, 12, 13, 14 ]) ) { return 'many'; }\n\n  return 'other';\n};"]}